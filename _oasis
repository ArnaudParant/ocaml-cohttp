OASISFormat: 0.3
Name:        cohttp
Version:     0.9.8
Synopsis:    HTTP library for Lwt, Async and Mirage
Authors:     Anil Madhavapeddy, Stefano Zacchiroli, David Sheets, Thomas Gazagnaire, David Scott
License:     LGPL-2.0 with OCaml linking exception
Plugins:     META (0.3)
BuildTools:  ocamlbuild

Library cohttp
  Path: std
  Findlibname: cohttp
  Modules: Cohttp
  BuildDepends: cohttp.protocol, cohttp.async, cohttp.lwt

Library cohttp_protocol
  Path: cohttp
  Findlibname: protocol
  Findlibparent: cohttp
  Pack: true
  Modules: IO, State_types, Code, Header, Cookie, Request, Response, Transfer, Accept, Accept_parser, Accept_lexer, Base64, Auth, Header_io, Transfer_io, Client, Body
  BuildDepends:	re, uri (>= 1.3.2), uri.services

Flag lwt
  Description: build the Lwt library
  Default: false

Flag async
  Description: build the Core/Async library
  Default: false

Flag mirage
  Description: build the Mirage library
  Default: false

Flag nettests
  Description: run the internet-using tests
  Default: false

Library cohttp_lwt_core
  Build$: flag(lwt)
  Install$: flag(lwt)
  Path: lwt
  Findlibname: lwt_core
  FindlibParent: cohttp
  BuildDepends: lwt, uri, cohttp.protocol, lwt.syntax
  Modules: Cohttp_lwt, Cohttp_lwt_net, Cohttp_lwt_body
 
Library cohttp_lwt_unix
  Build$: flag(lwt)
  Install$: flag(lwt)
  Path: lwt
  Findlibname: lwt
  FindlibParent: cohttp
  BuildDepends: lwt.unix, lwt, cohttp.lwt_core, lwt.ssl, lwt.syntax
  Modules: Cohttp_lwt_unix_io, Cohttp_lwt_unix

Library cohttp_mirage
  Build$: flag(mirage)
  Install$: flag(mirage)
  Path: lwt
  Findlibname: mirage
  FindlibParent: cohttp
  BuildDepends: uri, re, cohttp.lwt_core, lwt.syntax, mirage, mirage-net
  Modules: Cohttp_lwt_mirage_io, Cohttp_lwt_mirage

Library cohttp_async
  Build$: flag(async)
  Install$: flag(async)
  Path: async
  Findlibname: async
  FindlibParent: cohttp
  BuildDepends: uri, cohttp.protocol, async_core (>= 109.12.00), async_unix, threads, async
  Modules: Cohttp_async

Executable test_parser
  Path:               lib_test
  MainIs:             test_parser.ml
  Build$:             flag(tests) && flag(lwt)
  Custom:             true
  CompiledObject:     best
  Install:            false
  BuildDepends:       cohttp, cohttp.lwt, oUnit (>= 1.0.2)

Executable test_accept
  Path:               lib_test
  MainIs:             test_accept.ml
  Build$:             flag(tests)
  Custom:             true
  CompiledObject:     best
  Install:            false
  BuildDepends:       cohttp, oUnit (>= 1.0.2)

Executable test_header
  Path:               lib_test
  MainIs:             test_header.ml
  Build$:             flag(tests)
  Custom:             true
  CompiledObject:     best
  Install:            false
  BuildDepends:       cohttp, oUnit (>= 1.0.2)

Executable test_net_lwt
  Path:               lib_test
  MainIs:             test_net_lwt.ml
  Build$:             flag(tests) && flag(lwt)
  Custom:             true
  CompiledObject:     best
  Install:            false
  BuildDepends:       cohttp, cohttp.lwt, oUnit (>= 1.0.2)

Executable test_net_lwt_google
  Path:               lib_test
  MainIs:             test_net_lwt_google.ml
  Build$:             flag(tests) && flag(lwt)
  Custom:             true
  CompiledObject:     best
  Install:            false
  BuildDepends:       cohttp.lwt

Executable test_net_lwt_server
  Path:               lib_test
  MainIs:             test_net_lwt_server.ml
  Build$:             flag(tests) && flag(lwt)
  Custom:             true
  CompiledObject:     best
  Install:            false
  BuildDepends:       cohttp, cohttp.lwt

Executable test_net_lwt_client_and_server
  Path:               lib_test
  MainIs:             test_net_lwt_client_and_server.ml
  Build$:             flag(tests) && flag(lwt)
  Custom:             true
  CompiledObject:     best
  Install:            false
  BuildDepends:       cohttp, cohttp.lwt

Executable test_net_mirage_server
  Path:               lib_test
  MainIs:             test_net_mirage_server.ml
  Build$:             flag(tests) && flag(mirage)
  Custom:             true
  CompiledObject:     best
  Install:            false
  BuildDepends:       cohttp, cohttp.mirage

Executable test_net_async
  Path:               lib_test
  MainIs:             test_net_async.ml
  Build$:             flag(tests) && flag(async)
  Custom:             true
  CompiledObject:     best
  Install:            false
  BuildDepends:       cohttp, cohttp.async, oUnit (>= 1.0.2)

Executable test_net_async_server
  Path:               lib_test
  MainIs:             test_net_async_server.ml
  Build$:             flag(tests) && flag(async)
  Custom:             true
  CompiledObject:     best
  Install:            false
  BuildDepends:       cohttp, cohttp.async, oUnit (>= 1.0.2)

Test test_accept
  Run$:               flag(tests)
  Command:            $test_accept
  WorkingDirectory:   lib_test

Test test_header
  Run$:               flag(tests)
  Command:            $test_header
  WorkingDirectory:   lib_test

Test test_parser
  Run$:               flag(tests) && flag(lwt)
  Command:            $test_parser
  WorkingDirectory:   lib_test

Test test_net_lwt
  Run$:               flag(nettests) && flag(lwt)
  Command:            $test_net_lwt
  WorkingDirectory:   lib_test

Test test_net_async
  Run$:               flag(nettests) && flag(async)
  Command:            $test_net_async
  WorkingDirectory:   lib_test
